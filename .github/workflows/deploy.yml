name: Deploy to Streamlit and Hugging Face

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: false

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Push to Hugging Face Spaces
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
          HF_SPACE_NAME: ${{ secrets.HF_SPACE_NAME }}
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

          if [ -z "$HF_TOKEN" ] || [ -z "$HF_SPACE_NAME" ]; then
            echo "HuggingFace deployment skipped: missing secrets"
            echo "Add HF_TOKEN and HF_SPACE_NAME to repository secrets"
            exit 0
          fi

          if [ ! -f "README_HF.md" ]; then
            echo "HuggingFace deployment skipped: README_HF.md not found"
            exit 0
          fi

          echo "Deploying to HF Space: $HF_SPACE_NAME"

          # Stage a clean deployment worktree without Git history
          rm -rf hf-deploy
          mkdir hf-deploy
          rsync -a --delete \
            --exclude '.git/' \
            --exclude 'hf-deploy/' \
            ./ hf-deploy/

          cd hf-deploy

          # Use HuggingFace Space README
          cp README_HF.md README.md

          # Drop PNG assets (and other obvious binary blobs) from the deployment tree
          deleted_assets=false
          while IFS= read -r -d '' asset; do
            if [ "$deleted_assets" = false ]; then
              echo "Excluding binary assets from Hugging Face deployment:"
              deleted_assets=true
            fi
            echo "  - ${asset#./}"
            rm -f "$asset"
          done < <(find . -type f \
            \( -iname '*.png' -o -iname '*.jpg' -o -iname '*.jpeg' -o -iname '*.gif' -o -iname '*.webp' \) -print0)

          if [ "$deleted_assets" = false ]; then
            echo "No binary assets to exclude from Hugging Face deployment."
          fi

          # Initialise a fresh repository for the deployment payload
          git init
          git checkout -b main
          git add .
          git commit -m "Prepare Hugging Face deployment artifacts"

          # Push to HF Spaces (using generic username for HF git auth)
          git remote add hf https://hf:$HF_TOKEN@huggingface.co/spaces/$HF_SPACE_NAME

          echo "ðŸ“¤ Pushing to HuggingFace Spaces..."
          git push hf main:main --force

          cd ..
          rm -rf hf-deploy

          echo "HuggingFace deployment complete!"

      - name: Trigger Streamlit Cloud Deployment
        env:
          STREAMLIT_APP_URL: ${{ secrets.STREAMLIT_APP_URL }}
        run: |
          echo "Streamlit Cloud will auto-deploy from main branch"
          echo "App URL: $STREAMLIT_APP_URL"

      - name: Deployment Summary
        run: |
          echo "Deployment started"
          echo "HF Spaces: https://huggingface.co/spaces/${{ secrets.HF_SPACE_NAME }}"
          echo "Streamlit: ${{ secrets.STREAMLIT_APP_URL }}"
