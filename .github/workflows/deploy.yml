name: Deploy to Streamlit and Hugging Face

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: false

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Push to Hugging Face Spaces
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
          HF_SPACE_NAME: ${{ secrets.HF_SPACE_NAME }}
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

          if [ -z "$HF_TOKEN" ] || [ -z "$HF_SPACE_NAME" ]; then
            echo "HuggingFace deployment skipped: missing secrets"
            echo "Add HF_TOKEN and HF_SPACE_NAME to repository secrets"
            exit 0
          fi

          if [ ! -f "README_HF.md" ]; then
            echo "HuggingFace deployment skipped: README_HF.md not found"
            exit 0
          fi

          echo "Deploying to HF Space: $HF_SPACE_NAME"

          # Clone repository
          git clone . hf-deploy --branch main
          cd hf-deploy

          # Use HuggingFace Space README
          cp README_HF.md README.md

          # Remove PNG (and other tracked binary) assets from the deployment
          mapfile -d '' png_files < <(git ls-files -z '*.png') || true
          if [ "${#png_files[@]}" -gt 0 ]; then
            echo "Excluding PNG assets from Hugging Face deployment:"
            for file in "${png_files[@]}"; do
              echo "  - $file"
            done
            git rm --cached "${png_files[@]}"
          else
            echo "No PNG assets to exclude from Hugging Face deployment."
          fi

          # Commit deployment-specific changes (README swap and filtered assets)
          git add README.md
          git commit -m "Prepare Hugging Face deployment artifacts" || true

          # Push to HF Spaces (using generic username for HF git auth)
          git remote add hf https://hf:$HF_TOKEN@huggingface.co/spaces/$HF_SPACE_NAME

          echo "ðŸ“¤ Pushing to HuggingFace Spaces..."
          git push hf main:main --force

          cd ..
          rm -rf hf-deploy

          echo "HuggingFace deployment complete!"

      - name: Trigger Streamlit Cloud Deployment
        env:
          STREAMLIT_APP_URL: ${{ secrets.STREAMLIT_APP_URL }}
        run: |
          echo "Streamlit Cloud will auto-deploy from main branch"
          echo "App URL: $STREAMLIT_APP_URL"

      - name: Deployment Summary
        run: |
          echo "Deployment started"
          echo "HF Spaces: https://huggingface.co/spaces/${{ secrets.HF_SPACE_NAME }}"
          echo "Streamlit: ${{ secrets.STREAMLIT_APP_URL }}"
